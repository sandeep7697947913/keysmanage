{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/changepass.service.ts","webpack:///./src/app/contact/contact.component.css","webpack:///./src/app/contact/contact.component.html","webpack:///./src/app/contact/contact.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login-user.service.ts","webpack:///./src/app/pass-service.service.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register-user.service.ts","webpack:///./src/app/termsandcondition/termsandcondition.component.css","webpack:///./src/app/termsandcondition/termsandcondition.component.html","webpack:///./src/app/termsandcondition/termsandcondition.component.ts","webpack:///./src/app/token-interceptor.service.ts","webpack:///./src/app/user.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/userpass/userpass.component.css","webpack:///./src/app/userpass/userpass.component.html","webpack:///./src/app/userpass/userpass.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class='data'>\\n        <h3>Keys Manager</h3>\\n        <blockquote>\\n            This application is developed by <cite>sandeep yadav</cite> to remember all passwords.<br/>\\n        </blockquote>\\n        <h3>Made By</h3>\\n        <blockquote>\\n            <cite>Sandeep yadav and friends</cite><br/>\\n            <cite>Phone no. - 7697947913</cite>\\n        </blockquote>\\n        <h3>Tools Required</h3>\\n        <blockquote>\\n            HTML, CSS, Bootstrap, JavaScript, NodeJs, Express Server,Mongoose(MongoDB),Angular\\n        </blockquote>\\n        <h3>Special Thanks</h3>\\n        <blockquote>\\n            <cite>Mr. Anoop Ingole Sir<br/>Phone no. - 7898579690\\n            <br />\\n            ISRDC jabalpur<br />\\n            64, Sai Colony, Nr. Krishi Upaj Mandi,, Behind Pachori Petrol Pump, Karmeta, Jabalpur, Madhya Pradesh 482002</cite><br/>\\n            <a href='https://isrdc.business.site'>&raquo; Know More &laquo; </a> \\n        </blockquote>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserComponent } from './user/user.component';\nimport { HomeComponent } from './home/home.component';\nimport { UserpassComponent } from './userpass/userpass.component';\nimport { TermsandconditionComponent} from './termsandcondition/termsandcondition.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { AboutComponent } from './about/about.component';\nimport { AuthGuard } from './auth.guard';\nimport { ProfileComponent } from './profile/profile.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component : HomeComponent\n  },\n  {\n    path: 'user',\n    canActivate: [AuthGuard],\n    component: UserComponent\n  },\n  {\n    path: 'userpass',\n    canActivate: [AuthGuard],\n    component: UserpassComponent\n  },\n  {\n    path: 't&c',\n    component: TermsandconditionComponent\n  },\n  {\n    path: 'about',\n    component : AboutComponent\n  },\n  {\n    path: 'contactus',\n    component : ContactComponent\n  },\n  {\n    path: 'profile',\n    canActivate: [AuthGuard],\n    component: ProfileComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<div class=\\\"container-fluid mx-2 my-4\\\">\\n  <div class=\\\"row container\\\">\\n    <div class=\\\"offset-1 col-md-2\\\">\\n      <h1 class='text-danger animated rubberBand infinite'>Keys<sub class=\\\"ml-4 text-info\\\"><cite>Manager</cite></sub></h1>\\n    </div>\\n  </div>\\n</div>\\n<router-outlet></router-outlet>\\n\\n  <div class=\\\"container-fluid fixed-bottom\\\">\\n      <ul class=\\\"list-inline text-center lead\\\">\\n          <li class='list-inline-item col-md-2'><a class='text-danger text-decoration-none' routerLink='t&c'>Terms and condition</a></li>\\n          <li class='list-inline-item col-md-2'><a class='text-danger text-decoration-none' routerLink='about'>About</a></li>\\n          <li class='list-inline-item col-md-2'><a class='text-danger text-decoration-none' routerLink='contactus'>Contact us</a></li>\\n          <li class='list-inline-item col-md-2'><a class='text-danger text-decoration-none' routerLink='profile'>Profile</a></li>\\n      </ul>\\n  </div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor( ) {\n\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserComponent } from './user/user.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthGuard } from './auth.guard';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { UserpassComponent } from './userpass/userpass.component';\nimport { TermsandconditionComponent } from './termsandcondition/termsandcondition.component';\nimport { AboutComponent } from './about/about.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { ProfileComponent } from './profile/profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    HomeComponent,\n    UserpassComponent,\n    TermsandconditionComponent,\n    AboutComponent,\n    ContactComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [AuthGuard,\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: TokenInterceptorService,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginUserService } from './login-user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private _loginService: LoginUserService, private _router: Router) {\n\n  }\n\n  canActivate(): boolean {\n    if (this._loginService.loggedIn()) {\n      return true;\n    } else {\n      this._router.navigate(['/home']);\n      return false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChangepassService {\n\n  constructor(private _httpClient: HttpClient) { }\n\n  private _url = 'http://localhost:3000/api/updatepassword';\n\n  updatePass(data) {\n    return this._httpClient.post<any>(this._url, data);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3QvY29udGFjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class='sec'>\\n      <h2>Via phone no:- </h2>\\n      <blockquote>\\n      <p>7697947913 - <cite>Idea</cite></p>\\n      </blockquote>\\n      <blockquote>\\n      <p>7000073053 - <cite>R. Jio</cite></p>\\n      </blockquote>\\n  </div>\\n  <div class='sec'>\\n      <h2>Via E-mail :- </h2>\\n      <blockquote>\\n      <p>sandeep7697947913@gmail.com (gmail) -  <cite>E-mail</cite></p>\\n      </blockquote>\\n      <blockquote>\\n      <p>sandeepyadav711.sy@gmail.com (gmail) - <cite>E-mail</cite></p>\\n      </blockquote>\\n  </div>\\n  <div class='sec'>\\n      <h2>Via Facebook :- </h2>\\n      <blockquote>\\n      <p><a href='https://www.facebook.com/quekewatzo0'>click here</a> - <cite>facebook</cite></p>\\n      </blockquote>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row ml-4\\\">\\n    <form #loginForm='ngForm' (ngSubmit)='loginFormSubmit(loginForm.value)' class='offset-4 animated flip form-inline'>\\n      <div class=\\\"form-group mx-2\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-at\\\"></i></span>\\n          </div>\\n          <input type=\\\"text\\\" ngModel name='email' class=\\\"form-control\\\" required placeholder=\\\"E-mail\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group mx-2\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-prepend\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-key\\\"></i></span>\\n          </div>\\n          <input class=\\\"form-control\\\" required ngModel name='password' type=\\\"password\\\" placeholder=\\\"Password\\\">\\n        </div>\\n      </div>\\n      <input [disabled]='!loginForm.valid' type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Log in\\\"/>\\n    </form>\\n  </div>\\n  <div *ngIf=\\\"Invalidcredential\\\" class=\\\"row offset-4\\\">\\n    <small class=\\\"ml-4 text-danger\\\">Either E-mail or Password is wrong</small>\\n  </div>\\n  <div class=\\\"row container my-4 animated flip \\\">\\n      <img class=\\\"col-md-5 md-only img-responsive\\\" height=\\\"300\\\" src=\\\"../assets/lock.jpg\\\" >\\n    <div class=\\\"col-md-7\\\">\\n    <div class=\\\"card\\\">\\n        <h3 class=\\\"card-header \\\">Registration Form</h3>\\n      <div class=\\\"card-body\\\">\\n        <form #regitrationForm=\\\"ngForm\\\" (ngSubmit)=\\\"registrationFormSubmit()\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>E-mail</label>\\n            <input class='form-control'\\n            [class.is-invalid]='email.errors&&(email.invalid&&email.touched)'\\n            [class.is-valid]='(email.valid&&email.touched)'\\n            pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.)|(([a-zA-Z0-9\\\\-]+\\\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\\\]?)$\\\"\\n            required name=\\\"email\\\" #email='ngModel' [(ngModel)]=\\\"userModel.email\\\" type=\\\"E-mail\\\"/>\\n            <div *ngIf=\\\"email.errors&&(email.touched&&email.invalid)\\\">\\n              <small *ngIf='email.errors.required&&email.touched' class=\\\"text-danger\\\">E-mail is required</small>\\n              <small *ngIf='email.errors.pattern&&email.invalid&&email.touched' class=\\\"text-danger\\\">Invalid E-mail address</small>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>User Name</label>\\n            <input class='form-control' required name=\\\"name\\\" [(ngModel)]=\\\"userModel.name\\\"\\n            [class.is-invalid]='name.errors&&(name.invalid&&name.touched)'\\n            [class.is-valid]='(name.valid&&name.touched)'\\n            #name='ngModel' pattern=\\\"^[a-zA-Z ]{3,30}$\\\" type=\\\"text\\\"/>\\n            <div *ngIf=\\\"name.errors&&(name.touched&&name.invalid)\\\">\\n                <small *ngIf='name.errors.required&&name.touched' class=\\\"text-danger\\\">Name is required</small>\\n                <small *ngIf='name.errors.pattern&&name.invalid&&name.touched' class=\\\"text-danger\\\">Name should be more than 3 character</small>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Password</label>\\n            <input class='form-control'\\n            [class.is-invalid]='password.errors&&(password.invalid&&password.touched)'\\n            [class.is-valid]='(password.valid&&password.touched)'\\n            #password='ngModel' pattern=\\\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\\\" required name='password' [(ngModel)]=\\\"userModel.password\\\" type=\\\"password\\\"/>\\n            <div *ngIf=\\\"password.errors&&(password.touched&&password.invalid)\\\">\\n                <small *ngIf='password.errors.required&&password.touched' class=\\\"text-danger\\\">Password is required</small>\\n                <small *ngIf='password.errors.pattern&&password.invalid&&password.touched' class=\\\"text-danger\\\">Password must contain atleast one number,special character and lowercase,uppercase alphabet,one and of length 8 to 12</small>\\n            </div>\\n          </div>\\n          <input class=\\\"btn btn-primary\\\" [disabled]='!regitrationForm.valid' type=\\\"submit\\\" value='Register'>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n  </div>\\n</div> \"","import { Component, OnInit } from '@angular/core';\nimport { RegisterUserService} from './../register-user.service';\nimport { LoginUserService } from './../login-user.service';\nimport { User } from './../user';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  Invalidcredential: Boolean = false;\n  constructor(private  _registerUserService: RegisterUserService,\n    private _loginUserService: LoginUserService, private _router: Router) {\n     }\n    userModel = new User('', '', '');\n\n  ngOnInit() {\n  }\n\n  registrationFormSubmit() {\n    this._registerUserService.register(this.userModel).subscribe(\n      data => {\n        sessionStorage.setItem('token', data.token);\n        this._router.navigate(['/user']);\n      },\n      error => console.log('fail', error)\n    );\n  }\n\n  loginFormSubmit(formdata) {\n    this._loginUserService.login(formdata).subscribe(\n      data => {\n        switch (data.token) {\n          case ('invalidcredential'): {\n            this.Invalidcredential = true;\n            break;\n          }\n          default: {\n            sessionStorage.setItem('token', data.token);\n            this._router.navigate(['/user']);\n          }\n        }\n      },\n      err => {\n        console.log(err);\n        console.log('error');\n      }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginUserService {\n\n  _url = 'http://localhost:3000/api/login';\n\n  constructor(private _httpClient: HttpClient) {\n\n  }\n\n  login(user: any) {\n    return this._httpClient.post<any>(this._url, user);\n  }\n\n  loggedIn() {\n    return !!sessionStorage.getItem('token');\n  }\n\n  getToken() {\n    return sessionStorage.getItem('token');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PassServiceService {\n\n  _url = 'http://localhost:3000/api/insertpassword';\n  _url1 = 'http://localhost:3000/api/getpasswords';\n\n  constructor(private _httpClient: HttpClient) { }\n\n  savePass(data: any) {\n   return this._httpClient.post<any>(this._url, data);\n  }\n\n  getAllSavedPass() {\n    return this._httpClient.get<any>(this._url1);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class='container col-md-6'>\\n  <form #cpform='ngForm' (ngSubmit)='changePass(cpform.value)' novalidate>\\n    <div class='form-group'> \\n      <label for=\\\"email\\\">E-mail</label>\\n      <input class='form-control' name='email' ngModel #email='ngModel' type='email' \\n        [class.is-invalid]='email.errors&&(email.invalid&&email.touched)'\\n        [class.is-valid]='(email.valid&&email.touched)' required\\n        pattern=\\\"^([a-zA-Z0-9_\\\\-\\\\.]+)@((\\\\[[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.[0-9]{1,3}\\\\.)|(([a-zA-Z0-9\\\\-]+\\\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\\\]?)$\\\"/>\\n      <div *ngIf=\\\"email.errors&&(email.touched&&email.invalid)\\\">\\n        <small *ngIf='email.errors.required&&email.touched' class=\\\"text-danger\\\">E-mail is required</small>\\n        <small *ngIf='email.errors.pattern&&email.invalid&&email.touched' class=\\\"text-danger\\\">Invalid E-mail address</small>\\n      </div>\\n    </div>\\n    <div class='form-group'> \\n      <label for=\\\"oldpass\\\">Password</label>\\n      <input class='form-control' name='oldpass' ngModel #oldpass='ngModel' type='password'\\n      [class.is-invalid]='oldpass.errors&&(oldpass.invalid&&oldpass.touched)'\\n      [class.is-valid]='(oldpass.valid&&oldpass.touched)' required\\n      #password='ngModel' pattern=\\\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\\\" />\\n      <div *ngIf=\\\"oldpass.errors&&(oldpass.touched&&oldpass.invalid)\\\">\\n        <small *ngIf='oldpass.errors.required&&oldpass.touched' class=\\\"text-danger\\\">Password is required</small>\\n        <small *ngIf='oldpass.errors.pattern&&oldpass.invalid&&oldpass.touched' class=\\\"text-danger\\\">Password must contain atleast one number,special character and lowercase,uppercase alphabet,one and of length 8 to 12</small>\\n      </div>\\n    </div>\\n    <div class='form-group'> \\n        <label for=\\\"newpass\\\">New Password</label>\\n        <input class='form-control' name='newpass' ngModel #newpass='ngModel' type='password'\\n        [class.is-invalid]='newpass.errors&&(newpass.invalid&&newpass.touched)'\\n        [class.is-valid]='(newpass.valid&&newpass.touched)' required\\n        #newpass='ngModel' pattern=\\\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$\\\" />\\n        <div *ngIf=\\\"newpass.errors&&(newpass.touched&&newpass.invalid)\\\">\\n          <small *ngIf='newpass.errors.required&&newpass.touched' class=\\\"text-danger\\\">Password is required</small>\\n          <small *ngIf='newpass.errors.pattern&&newpass.invalid&&newpass.touched' class=\\\"text-danger\\\">Password must contain atleast one number,special character and lowercase,uppercase alphabet,one and of length 8 to 12</small>\\n        </div>\\n    </div>\\n    <input [disabled]='!cpform.valid' class='btn btn-primary' type='submit' value=\\\"Change Password\\\"/>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ChangepassService } from './../changepass.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private _changePassService: ChangepassService, private _router: Router) { }\n\n  ngOnInit() {\n\n  }\n\n  changePass(formdata) {\n   this._changePassService.updatePass(formdata).subscribe(\n     data => {\n       switch (data.status) {\n        case('changed'): {\n          sessionStorage.removeItem('token');\n          this._router.navigate(['/home']);\n          break;\n        }\n        case('wrongpass') : {\n          console.log('wrongpass');\n          alert('old password is wrong');\n        }\n       }\n      },\n     (err) => { console.log(err); }\n   );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterUserService {\n  _url = 'http://localhost:3000/api/register';\n  constructor(private _http: HttpClient) { }\n\n  register(user: any) {\n    return this._http.post<any>(this._url, user);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlcm1zYW5kY29uZGl0aW9uL3Rlcm1zYW5kY29uZGl0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <h6 class=\\\"offset-1\\\">Terms And Condition</h6>\\n  <blockquote class=\\\"offset-1\\\">\\n    <ul>\\n      <li>All rights are reserved. </li>\\n      <li>This project maitains the passwords. </li>\\n      <li>If you forget pssword you lose all data. </li>\\n      <li>Unfortunately there is know way to get back your account. </li>\\n      <li> you can only have only one account </li>\\n    </ul>\\n  </blockquote>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-termsandcondition',\n  templateUrl: './termsandcondition.component.html',\n  styleUrls: ['./termsandcondition.component.css']\n})\nexport class TermsandconditionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { LoginUserService } from './login-user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService  implements HttpInterceptor {\n\n  constructor(private _injector: Injector ) { }\n\n  intercept (req, next) {\n    const loginservice = this._injector.get(LoginUserService);\n    const tokenizedReq = req.clone({\n      setHeaders: {\n        Authorization : `Bearer ${loginservice.getToken()}`\n      }\n    });\n    return next.handle(tokenizedReq);\n  }\n}\n","export class User {\n    constructor(\n        public name: String,\n        public email: String,\n        public password: String\n    ) {}\n}\n","module.exports = \".middle{\\r\\n    padding: 10% 5%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWlkZGxle1xyXG4gICAgcGFkZGluZzogMTAlIDUlO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"container row\\\">\\n  <form #passwordform='ngForm' (ngSubmit)=\\\"savePass(passwordform.value)\\\" class=\\\"offset-2 col-md-6\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>Name</label>\\n      <input class='form-control' name='name' ngModel\\n      [class.is-invalid]='name.errors&&(name.invalid&&name.touched)'\\n      [class.is-valid]='(name.valid&&name.touched)'\\n      #name='ngModel' required pattern=\\\"^[a-zA-Z ]{3,30}$\\\" type=\\\"text\\\"/>\\n      <div *ngIf=\\\"name.errors&&(name.touched&&name.invalid)\\\">\\n          <small *ngIf='name.errors.required&&name.touched' class=\\\"text-danger\\\">Name is required</small>\\n          <small *ngIf='name.errors.pattern&&name.invalid&&name.touched' class=\\\"text-danger\\\">Name should be more than 3 character</small>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>URL</label>\\n      <input class='form-control' name='url' ngModel #url='ngModel'\\n      [class.is-invalid]='url.errors&&(url.invalid&&name.touched)'\\n      [class.is-valid]='(url.valid&&url.touched)'\\n      required pattern=\\\"^(http:\\\\/\\\\/www\\\\.|https:\\\\/\\\\/www\\\\.|http:\\\\/\\\\/|https:\\\\/\\\\/)?[a-z0-9]+([\\\\-\\\\.]{1}[a-z0-9]+)*\\\\.[a-z]{2,5}(:[0-9]{1,5})?(\\\\/.*)?$\\\" type=\\\"text\\\"/>\\n      <div *ngIf=\\\"url.errors&&(url.touched&&url.invalid)\\\">\\n          <small *ngIf='url.errors.required&&url.touched' class=\\\"text-danger\\\">URL is required</small>\\n          <small *ngIf='url.errors.pattern&&url.invalid&&url.touched' class=\\\"text-danger\\\">Invalid URL</small>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Password</label>\\n      <input class='form-control' ngModel name='password'\\n        [class.is-invalid]='password.errors&&(password.invalid&&password.touched)'\\n        [class.is-valid]='(password.valid&&password.touched)'\\n        #password='ngModel' required name='password' type=\\\"password\\\"/>\\n      <div *ngIf=\\\"password.errors&&(password.touched&&password.invalid)\\\">\\n          <small *ngIf='password.errors.required&&password.touched' class=\\\"text-danger\\\">Password is required</small>\\n      </div>\\n    </div>\\n    <input [disabled]='!passwordform.valid' class='btn btn-outline-primary' type=\\\"submit\\\" value='save' />\\n  </form>\\n  <div (click)='userPass()' class=\\\"middle btn btn-primary text-center\\\">\\n    Passwords\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { PassServiceService } from './../pass-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(private _passService: PassServiceService, private _router: Router) { }\n\n  ngOnInit() {\n\n  }\n\n  savePass(datamodel) {\n    this._passService.savePass(datamodel).subscribe(\n      data => {\n        this._router.navigate(['/userpass']);\n      },\n      error => {\n        this._router.navigate(['/home']);\n      }\n    );\n  }\n\n  userPass() {\n   this._router.navigate(['/userpass']);\n  }\n\n}\n","module.exports = \".middle{\\r\\n    padding: 10% 1%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnBhc3MvdXNlcnBhc3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC91c2VycGFzcy91c2VycGFzcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1pZGRsZXtcclxuICAgIHBhZGRpbmc6IDEwJSAxJTtcclxufSJdfQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n      <table class=\\\"table\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">Name</th>\\n            <th scope=\\\"col\\\">Url</th>\\n            <th scope=\\\"col\\\">password</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let pas of passes\\\" >\\n            <td scope=\\\"row\\\">{{pas.name}}</td>\\n            <td>{{pas.url}}</td>\\n            <td>{{pas.password}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <div (click)='addpass()' class=\\\"col-md-2 btn btn-primary middle\\\">\\n     Add password\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { PassServiceService } from './../pass-service.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-userpass',\n  templateUrl: './userpass.component.html',\n  styleUrls: ['./userpass.component.css']\n})\nexport class UserpassComponent implements OnInit {\n\n  passes;\n\n  constructor(private _passService: PassServiceService, private _router: Router) { }\n\n  ngOnInit() {\n    this._passService.getAllSavedPass().subscribe(\n      (res) => {\n        this.passes = res;\n      },\n      err => this._router.navigate(['/home'])\n    );\n  }\n\n  addpass() {\n    this._router.navigate(['/user']);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}